// PRQA S 1050 EOF
/*

	Copyright 1995-2016, Advanced Computer Systems , Inc.
	Via Della Bufalotta, 378 - 00139 Roma - Italy
	http://www.acsys.it

	All Rights Reserved.

	This is UNPUBLISHED PROPRIETARY SOURCE CODE of Advanced Computer Systems;
	the contents of this file may not be disclosed to third parties, copied or
	duplicated in any form, in whole or in part, without the prior written
	permission of Advanced Computer Systems, Inc.

	$Prod: A.C.S. Db Cryosat Library $

	$Id$

	$Author$

	$Log$
	Revision 5.3  2016/03/26 21:42:59  marpas
	using new db I/F
	
	Revision 5.2  2014/10/30 10:55:47  marpas
	during merge checks LockException instead of IOException from file locking functions
	
	Revision 5.1  2013/07/22 18:01:03  marpas
	aligning to new libDbData interface
	
	Revision 5.0  2013/06/11 14:16:32  marpas
	adopting libException 5.x standards
	
	Revision 2.3  2013/01/23 17:23:09  marpas
	introducing dbConnectionPool for factories
	coding best practices
	interface rationalization
	qa rules
	
	Revision 2.2  2012/12/11 17:30:29  marpas
	qa rules
	
	Revision 2.1  2012/02/13 16:53:02  marpas
	refactoring
	
	Revision 2.0  2006/02/28 09:09:03  marpas
	Exception 2.1 I/F adopted
	
	Revision 1.1  2005/07/21 10:24:43  marpas
	dbConfigurationSpace and its query imported from libDbCryosat
	
	Revision 1.14  2004/08/30 17:51:13  paoscu
	doQuery abstract I/F changed
	
	Revision 1.13  2004/04/28 13:08:40  paoscu
	Incremental query support.
	
	Revision 1.12  2004/04/13 16:51:54  paoscu
	_queriedType added.
	Copy constructor and operator= added
	clone() method added.
	
	Revision 1.11  2004/02/04 10:12:35  paoscu
	Library generated again. dbPersistent interface changed.
		

*/

// This file is automatically generated by dbGenerator tool

#ifndef _dbConfigurationSpaceQuery_H_
#define _dbConfigurationSpaceQuery_H_

#include <acs_c++config.hpp>
#include <dbGeneralQuery.h>
#include <exException.h>

_ACS_BEGIN_NAMESPACE(acs)

class dbCryosatFactory ;
class dbConfigurationSpace ;

//
//
//
// class dbConfigurationSpaceQuery
//
//
//
class dbConfigurationSpaceQuery : // PRQA S 2109
	public dbGeneralQuery
{
public:
	friend class dbResourceSpaceFactory ; // PRQA S 2107
	typedef dbConfigurationSpace _queriedType ;
	
	dbConfigurationSpaceQuery(dbConfigurationSpaceQuery const &) ;
	dbConfigurationSpaceQuery &operator=(dbConfigurationSpaceQuery const &) ;
	
	virtual dbGeneralQueryIF *clone() const ; // PRQA S 2502
	
	static  std::string staticClassName() ;
	virtual ~dbConfigurationSpaceQuery() throw() ;

	virtual unsigned long doQuery(dbConnection &, bool incremental=false, bool enabled = true)  ; 

	virtual dbConfigurationSpace *operator[](unsigned long i) ; 
	virtual const dbConfigurationSpace *operator[](unsigned long i) const ; 

protected:
	explicit dbConfigurationSpaceQuery(const std::string &dbKey);

private:
    dbConfigurationSpaceQuery() ; // not implemented 
private:

	ACS_CLASS_DECLARE_DEBUG_LEVEL(dbConfigurationSpaceQuery) ;
} ;

_ACS_END_NAMESPACE

#endif // _dbConfigurationSpaceQuery_H_

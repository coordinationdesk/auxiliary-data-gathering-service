// PRQA S 1050 EOF
/*

	Copyright 1995-2021, Advanced Computer Systems , Inc.
	Via Della Bufalotta, 378 - 00139 Roma - Italy
	http://www.acsys.it

	All Rights Reserved.

	This is UNPUBLISHED PROPRIETARY SOURCE CODE of Advanced Computer Systems;
	the contents of this file may not be disclosed to third parties, copied or
	duplicated in any form, in whole or in part, without the prior written
	permission of Advanced Computer Systems, Inc.

	$Prod: A.C.S. Db Cryosat Library $

	$Id$

	$Author$

	$Log$
	Revision 6.1  2016/07/27 08:27:46  damdec
	Compilation warnings fixed.
	
	Revision 6.0  2016/07/07 13:44:04  damdec
	CSGACQ-82: special queries modified to be compatible with Oracle
	
	Revision 5.4  2016/04/19 13:53:46  marpas
	coding best practice application in progress
	useless virtual filedName method removed
	
	Revision 5.3  2016/04/15 14:37:04  marpas
	coding best practices application in progress
	
	Revision 5.2  2016/04/11 13:28:13  marpas
	adopting new db interfaces
	coding best practices application in progress
	
	Revision 5.1  2016/03/26 21:42:50  marpas
	using new db I/F
	
	Revision 5.0  2015/02/17 11:25:25  marfav
	Field unique_id added to table t_smactions
	
	Revision 4.0  2013/09/30 12:30:55  marpas
	the following classes have been removed:
	dbDistributionPolicy
	dbDistributionPolicyQuery
	dbIORepository
	dbIORepositoryQuery
	dbReceptionPolicy
	dbReceptionPolicyQuery
	
	Revision 3.0  2013/09/19 14:57:22  marfav
	dbSMactions now include inventory id pointers
	
	Revision 2.4  2013/03/29 19:51:29  marpas
	removing html related functions
	
	Revision 2.3  2012/06/15 09:54:29  marpas
	removing warning related to virtual method hiding
	
	Revision 2.2  2012/02/14 12:52:46  marpas
	 refactoring and introducing dbInventory::uniqueId
	
	Revision 2.1  2011/03/02 18:47:13  marpas
	serial 8 support
	
	Revision 2.0  2006/02/28 09:09:35  marpas
	Exception 2.1 I/F adopted
	
	Revision 1.8  2005/06/17 10:31:54  marpas
	std namespaces took into consideration
	
	Revision 1.7  2004/07/07 10:34:32  paoscu
	dbPersistent I/F chnaged
	
	Revision 1.6  2004/05/03 14:55:34  paoscu
	Paramer "id" removed in method "remove"
	
	Revision 1.5  2004/04/13 16:57:08  paoscu
	ThreadSafe::Lock used.
	clobe() method added.
	
	Revision 1.4  2004/02/04 10:12:35  paoscu
	Library generated again. dbPersistent interface changed.
		

*/

// This file is automatically generated by dbGenerator tool

#ifndef _dbDistributionView_H_
#define _dbDistributionView_H_

#include <exException.h>
#include <dbPersistent.h>
#include <DateTime.h>

#include <string>

namespace acs {

class dbCryosatFactory ;

class dbRow ;
class rsResourceSet ;
class XMLOstream ;

//
//
//
// class dbDistributionView
//
//
//
class dbDistributionView :
	public dbPersistent
{
public:
	friend class dbCryosatFactory ;

	virtual ~dbDistributionView() throw() ;
	dbDistributionView &operator=(const dbDistributionView &) ; // operator =

	static  std::string staticClassName() ;
	virtual dbPersistent *clone() const ;

	// inherited from dbPersistent
	virtual std::string className() const ;
	virtual void reset() ; // initialize the class
	virtual IdType save(dbConnection &)  ; // save the data in database
	virtual bool load(dbConnection & , IdType id=0)  ; // load the class from the database. Return true if obect exist
	virtual IdType update(dbConnection &)  ; // update an existing instance in database
	virtual IdType remove(dbConnection &)  ; // remove the class from the database
	virtual bool validate() const  ; // True if the class have valid parameters, false otherwise
	virtual void exportObj(rsResourceSet &s) const ; // export the class to rsResourceSet
	virtual void importObj(rsResourceSet &s)  ; // import the class from a rsResourceSet
	virtual void exportXML(XMLOstream &xst) const ; // export the class to XML stream

	int loadRow(const dbRow &, int offset=0) ;

	void setPackageId(dbPersistent::IdType ) ;
	dbPersistent::IdType getPackageId() const ;

	void setStatus(const std::string &) ;
	const std::string &getStatus(bool *set=0) const ;
	void unsetStatus();

	void setDistributedDate(const DateTime &) ;
	const DateTime &getDistributedDate(bool *set=0) const ;
	void unsetDistributedDate();

	void setJobResponsible(const std::string &) ;
	const std::string &getJobResponsible(bool *set=0) const ;
	void unsetJobResponsible();

	void setCreationDate(const DateTime &) ;
	const DateTime &getCreationDate(bool *set=0) const ;
	void unsetCreationDate();

	void setMediaType(const std::string &) ;
	const std::string &getMediaType(bool *set=0) const ;
	void unsetMediaType();

	void setUserId(const std::string &) ;
	const std::string &getUserId(bool *set=0) const ;
	void unsetUserId();

	static std::string getFields() ;
	static std::string getTable() ;
	static std::string getOrderBy() ;

	// output to stream
	virtual void writeTo(std::ostream &) const ;
	virtual void writeTo(exostream &) const ;


protected:
	dbDistributionView() ;
	dbDistributionView(const dbDistributionView &) ;


private:
	std::string _status ;
	bool _statusSet ;

	DateTime _distributedDate ;
	bool _distributedDateSet ;

	std::string _jobResponsible ;
	bool _jobResponsibleSet ;

	DateTime _creationDate ;
	bool _creationDateSet ;

	std::string _mediaType ;
	bool _mediaTypeSet ;

	std::string _userId ;
	bool _userIdSet ;

	ACS_CLASS_DECLARE_DEBUG_LEVEL(dbDistributionView)
	
} ;


} // namespace

#endif // _dbDistributionView_H_

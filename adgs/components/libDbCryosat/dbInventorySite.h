// PRQA S 1050 EOF
/*

	Copyright 1995-2016, Advanced Computer Systems , Inc.
	Via Della Bufalotta, 378 - 00139 Roma - Italy
	http://www.acsys.it

	All Rights Reserved.

	This is UNPUBLISHED PROPRIETARY SOURCE CODE of Advanced Computer Systems;
	the contents of this file may not be disclosed to third parties, copied or
	duplicated in any form, in whole or in part, without the prior written
	permission of Advanced Computer Systems, Inc.

	$Prod: A.C.S. Db Cryosat Library $

	$Id$

	$Author$

	$Log$
	Revision 6.0  2016/07/07 13:44:04  damdec
	CSGACQ-82: special queries modified to be compatible with Oracle
	
	Revision 5.3  2016/04/19 13:53:47  marpas
	coding best practice application in progress
	useless virtual filedName method removed
	
	Revision 5.2  2016/04/15 14:37:04  marpas
	coding best practices application in progress
	
	Revision 5.1  2016/03/26 21:42:50  marpas
	using new db I/F
	
	Revision 5.0  2015/02/17 11:25:26  marfav
	Field unique_id added to table t_smactions
	
	Revision 4.0  2013/09/30 12:30:59  marpas
	the following classes have been removed:
	dbDistributionPolicy
	dbDistributionPolicyQuery
	dbIORepository
	dbIORepositoryQuery
	dbReceptionPolicy
	dbReceptionPolicyQuery
	
	Revision 3.0  2013/09/19 14:57:27  marfav
	dbSMactions now include inventory id pointers
	
	Revision 2.5  2013/03/29 19:51:29  marpas
	removing html related functions
	
	Revision 2.4  2012/11/16 13:01:14  marpas
	realignement of MAIN STREAM
	Introducing ADCS1FixedHeaderFactory class
	
	Revision 2.2  2012/02/14 12:52:48  marpas
	 refactoring and introducing dbInventory::uniqueId
	
	Revision 2.1  2008/10/20 13:40:27  marpas
	dbInventorySite classes added
	
	
*/

// This file is automatically generated by dbGenerator tool

#ifndef _dbInventorySite_H_
#define _dbInventorySite_H_

#include <exException.h>
#include <dbSmartPersistent.h>
#include <DateTime.h>

_ACS_BEGIN_NAMESPACE(acs)

class dbCryosatFactory ;

class dbRow ;
class rsResourceSet ;
class XMLOstream ;

//
//
//
// class dbInventorySite
//
//
//
class dbInventorySite : // PRQA S 2109, 2153
	public dbSmartPersistent
{
	friend class dbCryosatFactory ; // PRQA S 2107
public:

	virtual ~dbInventorySite() throw() ;
	dbInventorySite &operator=(const dbInventorySite &) ; // operator =

	static  std::string staticClassName() ;
	virtual dbPersistent *clone() const ; // PRQA S 2502

	// inherited from dbPersistent
	virtual std::string className() const ;

	virtual void exportObj(rsResourceSet &s) const ; // export the class to rsResourceSet
	virtual void importObj(rsResourceSet &s)  ; // import the class from a rsResourceSet
	virtual void exportXML(XMLOstream &xst) const ; // export the class to XML stream


	void setFileName(const std::string &, dbConnection &) ;
	std::string getFileName(bool &null, dbConnection &) const ;
	void unsetFileName();

	void setFileVersion(const std::string &, dbConnection &) ;
	std::string getFileVersion(bool &null, dbConnection &) const ;
	void unsetFileVersion();

	void setSiteId(int, dbConnection &) ;
	int getSiteId(bool &null, dbConnection &) const ;
	void unsetSiteId();


	static std::string getFields() ;
	static std::string getTable() ;

protected:
	explicit dbInventorySite(dbConnection &) ;
	dbInventorySite(const dbInventorySite &) ;
private:
    dbInventorySite() ; // not implemented
private:

	ACS_CLASS_DECLARE_DEBUG_LEVEL(dbInventorySite)
} ;


_ACS_END_NAMESPACE

#endif // _dbInventorySite_H_

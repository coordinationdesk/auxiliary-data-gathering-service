// PRQA S 1050 EOF
/*

	Copyright 1995-2016, Advanced Computer Systems , Inc.
	Via Della Bufalotta, 378 - 00139 Roma - Italy
	http://www.acsys.it

	All Rights Reserved.

	This is UNPUBLISHED PROPRIETARY SOURCE CODE of Advanced Computer Systems;
	the contents of this file may not be disclosed to third parties, copied or
	duplicated in any form, in whole or in part, without the prior written
	permission of Advanced Computer Systems, Inc.

	$Prod: A.C.S. Db Cryosat Library $

	$Id$

	$Author$

	$Log$
	Revision 6.1  2016/10/07 11:31:44  marpas
	moving all NameIdAssociator in libDbClient along all the others
	
	Revision 6.0  2016/07/07 13:44:04  damdec
	CSGACQ-82: special queries modified to be compatible with Oracle
	
	Revision 5.6  2016/04/19 13:53:47  marpas
	coding best practice application in progress
	useless virtual filedName method removed
	
	Revision 5.5  2016/04/18 15:22:52  marpas
	coding best practices application in progress
	
	Revision 5.4  2016/04/15 14:37:04  marpas
	coding best practices application in progress
	
	Revision 5.3  2016/03/26 21:42:50  marpas
	using new db I/F
	
	Revision 5.2  2016/03/24 10:22:35  marpas
	qa warning fixed
	
	Revision 5.1  2016/03/24 10:03:53  marpas
	fixed interface (wrong reference type for order id )
	
	Revision 5.0  2015/02/17 11:25:26  marfav
	Field unique_id added to table t_smactions
	
	Revision 4.0  2013/09/30 12:31:02  marpas
	the following classes have been removed:
	dbDistributionPolicy
	dbDistributionPolicyQuery
	dbIORepository
	dbIORepositoryQuery
	dbReceptionPolicy
	dbReceptionPolicyQuery
	
	Revision 3.0  2013/09/19 14:57:30  marfav
	dbSMactions now include inventory id pointers
	
	Revision 2.8  2013/04/05 09:36:19  marpas
	NameIdAssociator partial refactoring
	
	Revision 2.7  2013/03/29 19:51:30  marpas
	removing html related functions
	
	Revision 2.6  2012/11/16 13:01:15  marpas
	realignement of MAIN STREAM
	Introducing ADCS1FixedHeaderFactory class
	
	Revision 2.4  2012/02/14 12:52:50  marpas
	 refactoring and introducing dbInventory::uniqueId
	
	Revision 2.3  2009/02/11 16:23:43  marpas
	new methods added
	
	Revision 2.2  2008/10/14 13:36:20  marpas
	ordersattachment class implemented and tested
	
	Revision 2.1  2008/10/13 13:58:10  marpas
	dbOrdersAttachment class added (work in progress) still missing BLOB management
	
	
*/

// This file is automatically generated by dbGenerator tool

#ifndef _dbOrdersAttachment_H_
#define _dbOrdersAttachment_H_

#include <exException.h>
#include <dbSmartPersistent.h>
#include <DateTime.h>
#include <Singleton.hpp>

_ACS_BEGIN_NAMESPACE(acs)

class dbCryosatFactory ;


//
//
//
// class dbOrdersAttachment
//
//
//
class dbOrdersAttachment : // PRQA S 2109, 2153
	public dbSmartPersistent
{
public:
	friend class dbCryosatFactory ; // PRQA S 2107

	virtual ~dbOrdersAttachment() throw();
	dbOrdersAttachment &operator=(const dbOrdersAttachment &) ; // operator =

	static  std::string staticClassName() ;
	virtual dbPersistent *clone() const ; // PRQA S 2502

	// inherited from dbPersistent
	virtual std::string className() const ;

	virtual void exportObj(rsResourceSet &s) const ; // export the class to rsResourceSet
	virtual void importObj(rsResourceSet &s)  ; // import the class from a rsResourceSet
	virtual void exportXML(XMLOstream &xst) const ; // export the class to XML stream

	void setOrderId(dbPersistent::IdType, dbConnection &) ;
	dbPersistent::IdType getOrderId(bool &set, dbConnection &) const ;
	void unsetOrderId();

	void setAttachType(int, dbConnection &) ;
	int getAttachType(bool &set, dbConnection &) const ;
	void unsetAttachType();

	void setAttachName(const std::string &, dbConnection &) ;
	std::string getAttachName(bool &set, dbConnection &) const ;
	void unsetAttachName();
	
	void setAttachment(const std::string &, dbConnection &) ;
	std::string getAttachment(dbConnection &) const ;
	void unsetAttachment(dbConnection &) ;

	static std::string getFields() ;
	static std::string getTable() ;

	std::string download(const std::string &path, dbConnection &) const ;
	
protected:
	explicit dbOrdersAttachment(dbConnection &) ;
	dbOrdersAttachment(const dbOrdersAttachment &) ;
private:
    dbOrdersAttachment() ; // not implemented

private:
	ACS_CLASS_DECLARE_DEBUG_LEVEL(dbOrdersAttachment) 
} ;


_ACS_END_NAMESPACE

#endif // _dbOrdersAttachment_H_

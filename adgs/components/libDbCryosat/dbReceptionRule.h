// PRQA S 1050 EOF
/*

	Copyright 2012-2016, Advanced Computer Systems , Inc.
	Via Della Bufalotta, 378 - 00139 Roma - Italy
	http://www.acsys.it

	All Rights Reserved.

	This is UNPUBLISHED PROPRIETARY SOURCE CODE of Advanced Computer Systems;
	the contents of this file may not be disclosed to third parties, copied or
	duplicated in any form, in whole or in part, without the prior written
	permission of Advanced Computer Systems, Inc.

	$Prod: $

	$Id$

	$Author$

	$Log$
	Revision 7.0  2017/05/31 17:32:59  nicvac
	OPMAN-260: Need PDS DB schema PDS_12-04.
	
	Revision 6.0  2016/07/07 13:44:04  damdec
	CSGACQ-82: special queries modified to be compatible with Oracle
	
	Revision 5.3  2016/04/19 13:53:47  marpas
	coding best practice application in progress
	useless virtual filedName method removed
	
	Revision 5.2  2016/04/15 14:37:04  marpas
	coding best practices application in progress
	
	Revision 5.1  2016/03/26 21:42:50  marpas
	using new db I/F
	
	Revision 5.0  2015/02/17 11:25:26  marfav
	Field unique_id added to table t_smactions
	
	Revision 4.0  2013/09/30 12:31:03  marpas
	the following classes have been removed:
	dbDistributionPolicy
	dbDistributionPolicyQuery
	dbIORepository
	dbIORepositoryQuery
	dbReceptionPolicy
	dbReceptionPolicyQuery
	
	Revision 3.0  2013/09/19 14:57:31  marfav
	dbSMactions now include inventory id pointers
	
	Revision 2.2  2012/11/28 13:16:05  marpas
	work in proegress
	
	Revision 2.1  2012/11/19 22:51:15  marpas
	compile with PDS_OLD_SCHEMA to use old pds schema.
	dbReceptionRule and related Query class introduced
	
	
*/

// This file is automatically generated by dbGenerator tool

#ifndef _dbReceptionRule_H_
#define _dbReceptionRule_H_

#include <dbSmartPersistent.h>
#include <exException.h>

_ACS_BEGIN_NAMESPACE(acs)

//
//
//
// class dbReceptionRule
//
//
//
class dbReceptionRule : // PRQA S 2109, 2153
	public dbSmartPersistent
{
public:
	explicit dbReceptionRule(dbConnection &conn) ;
	dbReceptionRule(const dbReceptionRule &) ;

	virtual ~dbReceptionRule() throw() ;
	dbReceptionRule &operator=(const dbReceptionRule &) ; // operator =

    void getTTParameters(std::ostream &theStream, dbConnection& conn) const ;

    static std::string table() { return "t_receptionrules" ; }
private:
    dbReceptionRule() ; // not implemented
private:
	ACS_CLASS_DECLARE_DEBUG_LEVEL(dbReceptionRule) ;
} ;


_ACS_END_NAMESPACE

#endif // _dbReceptionRule_H_

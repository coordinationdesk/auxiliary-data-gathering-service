// PRQA S 1050 EOF
/*

	Copyright 1995-2016, Advanced Computer Systems , Inc.
	Via Della Bufalotta, 378 - 00139 Roma - Italy
	http://www.acsys.it

	All Rights Reserved.

	This is UNPUBLISHED PROPRIETARY SOURCE CODE of Advanced Computer Systems;
	the contents of this file may not be disclosed to third parties, copied or
	duplicated in any form, in whole or in part, without the prior written
	permission of Advanced Computer Systems, Inc.

	$Prod: A.C.S. Db Cryosat Library $

	$Id$

	$Author$

	$Log$
	Revision 6.0  2016/07/07 13:44:05  damdec
	CSGACQ-82: special queries modified to be compatible with Oracle
	
	Revision 5.4  2016/04/19 13:53:47  marpas
	coding best practice application in progress
	useless virtual filedName method removed
	
	Revision 5.3  2016/04/15 14:37:04  marpas
	coding best practices application in progress
	
	Revision 5.2  2016/04/11 13:28:14  marpas
	adopting new db interfaces
	coding best practices application in progress
	
	Revision 5.1  2016/03/26 21:42:50  marpas
	using new db I/F
	
	Revision 5.0  2015/02/17 11:25:26  marfav
	Field unique_id added to table t_smactions
	
	Revision 4.0  2013/09/30 12:31:04  marpas
	the following classes have been removed:
	dbDistributionPolicy
	dbDistributionPolicyQuery
	dbIORepository
	dbIORepositoryQuery
	dbReceptionPolicy
	dbReceptionPolicyQuery
	
	Revision 3.0  2013/09/19 14:57:32  marfav
	dbSMactions now include inventory id pointers
	
	Revision 2.6  2013/03/29 19:51:30  marpas
	removing html related functions
	
	Revision 2.5  2012/06/15 09:54:30  marpas
	removing warning related to virtual method hiding
	
	Revision 2.4  2012/02/14 12:52:51  marpas
	 refactoring and introducing dbInventory::uniqueId
	
	Revision 2.3  2011/03/02 18:47:15  marpas
	serial 8 support
	
	Revision 2.2  2009/06/16 11:09:18  marpas
	VEN-1235 development: usermode for reception policies and distribution policies added
	
	Revision 2.1  2007/03/19 11:29:09  marpas
	ADM work in progress
	
	Revision 2.0  2006/02/28 09:09:36  marpas
	Exception 2.1 I/F adopted
	
	Revision 1.22  2005/06/17 10:31:55  marpas
	std namespaces took into consideration
	
	Revision 1.21  2004/07/19 17:50:59  paoscu
	dbEMailAddress and dbEMailAddressQuery removed
	dbUser has set and get EMAIL ADDRESS
	
	Revision 1.20  2004/07/07 10:34:33  paoscu
	dbPersistent I/F chnaged
	
	Revision 1.19  2004/05/03 14:55:34  paoscu
	Paramer "id" removed in method "remove"
	
	Revision 1.18  2004/04/19 15:34:52  paoscu
	Better name for methods.
	ACE include removed
		

*/

// This file is automatically generated by dbGenerator tool

#ifndef _dbUser_H_
#define _dbUser_H_

#include <exException.h>
#include <dbPersistent.h>

_ACS_BEGIN_NAMESPACE(acs)

class dbCryosatFactory ;

class dbRow ;
class rsResourceSet ;
class XMLOstream ;

//
//
//
// class dbUser
//
//
//
class dbUser : // PRQA S 2109, 2153
	public dbPersistent
{
	friend class dbCryosatFactory ; // PRQA S 2107
public:

	virtual ~dbUser() throw() ;
	dbUser &operator=(const dbUser &) ; // operator =

	static  std::string staticClassName() ;

	// inherited from dbPersistent
	virtual dbPersistent* clone() const ; // PRQA S 2502
	virtual std::string className() const ;
	virtual void reset() ; // initialize the class
	virtual IdType save(dbConnection &)  ; // save the data in database
	virtual bool load(dbConnection &, IdType id=0)  ; // load the class from the database. Return true if obect exist
	virtual IdType update(dbConnection &)  ; // update an existing instance in database
	virtual IdType remove(dbConnection &)  ; // remove the class from the database // PRQA S 2502
	virtual bool validate() const  ; // True if the class have valid parameters, false otherwise
	virtual void exportObj(rsResourceSet &s) const ; // export the class to rsResourceSet
	virtual void importObj(rsResourceSet &s)  ; // import the class from a rsResourceSet
	virtual void exportXML(XMLOstream &xst) const ; // export the class to XML stream

	int loadRow(const dbRow &, int offset=0) ;

	static std::string getWhere() ;
	static std::string getIdName() ;

	void setUserId(const std::string &) ;
	const std::string &getUserId(bool *set=0) const ;
	void unsetUserId();

	void setFirstName(const std::string &) ;
	const std::string &getFirstName(bool *set=0) const ;
	void unsetFirstName();

	void setLastName(const std::string &) ;
	const std::string &getLastName(bool *set=0) const ;
	void unsetLastName();

	void setTitle(const std::string &) ;
	const std::string &getTitle(bool *set=0) const ;
	void unsetTitle();

	void setOrganization(const std::string &) ;
	const std::string &getOrganization(bool *set=0) const ;
	void unsetOrganization();

	void setDepartment(const std::string &) ;
	const std::string &getDepartment(bool *set=0) const ;
	void unsetDepartment();

	void setFax(const std::string &) ;
	const std::string &getFax(bool *set=0) const ;
	void unsetFax();

	void setPhone(const std::string &) ;
	const std::string &getPhone(bool *set=0) const ;
	void unsetPhone();

	void setPostalAddress(const std::string &) ;
	const std::string &getPostalAddress(bool *set=0) const ;
	void unsetPostalAddress();

	void setProjectAndProcessing(const std::string &) ;
	const std::string &getProjectAndProcessing(bool *set=0) const ;
	void unsetProjectAndProcessing();

	void setPackageRequired(bool) ;
	bool getPackageRequired(bool *set=0) const ;
	void unsetPackageRequired();

	void setCompressPackage(bool) ;
	bool getCompressPackage(bool *set=0) const ;
	void unsetCompressPackage();

	void setCompressionMode(const std::string &) ;
	const std::string &getCompressionMode(bool *set=0) const ;
	void unsetCompressionMode();

	void setUserType(const std::string &) ;
	const std::string &getUserType(bool *set=0) const ;
	void unsetUserType();

	void setPackageMaxSize(int) ;
	int getPackageMaxSize(bool *set=0) const ;
	void unsetPackageMaxSize();

	void setProgMediaNumber(int) ;
	int getProgMediaNumber(bool *set=0) const ;
	void unsetProgMediaNumber();

	void setEMailAddress(const std::string &) ;
	const std::string &getEMailAddress(bool *set=0) const ;
	void unsetEMailAddress();

	void setAllQualified(bool) ;
	bool getAllQualified(bool *set=0) const ;
	void unsetAllQualified();

	void setMode(int) ;
	int getMode(bool *set=0) const ;
	void unsetMode();


	static std::string getFields() ;
	static std::string getTable() ;
	static std::string getOrderBy() ;

	// output to stream
	virtual void writeTo(std::ostream &) const ;
	virtual void writeTo(exostream &) const ;


protected:
	dbUser() ;
	dbUser(const dbUser &) ;


private:
	int privateLoadRow(const dbRow &, int offset=0) ;
	static std::string privateGetFields() ;
	static std::string privateGetOrderBy() ;


private:
	std::string _userId ;
	bool _userIdSet ;

	std::string _firstName ;
	bool _firstNameSet ;

	std::string _lastName ;
	bool _lastNameSet ;

	std::string _title ;
	bool _titleSet ;

	std::string _organization ;
	bool _organizationSet ;

	std::string _department ;
	bool _departmentSet ;

	std::string _fax ;
	bool _faxSet ;

	std::string _phone ;
	bool _phoneSet ;

	std::string _postalAddress ;
	bool _postalAddressSet ;

	std::string _projectAndProcessing ;
	bool _projectAndProcessingSet ;

	bool _packageRequired ;
	bool _packageRequiredSet ;

	bool _compressPackage ;
	bool _compressPackageSet ;

	std::string _compressionMode ;
	bool _compressionModeSet ;

	std::string _userType ;
	bool _userTypeSet ;

	int _packageMaxSize ;
	bool _packageMaxSizeSet ;

	int _progMediaNumber ;
	bool _progMediaNumberSet ;

	std::string _eMailAddress ;
	bool _eMailAddressSet ;

	bool _allQualified ;
	bool _allQualifiedSet ;

	int _mode ;
	bool _modeSet ;


	ACS_CLASS_DECLARE_DEBUG_LEVEL(dbUser)
} ;


_ACS_END_NAMESPACE

#endif // _dbUser_H_

// PRQA S 1050 EOF
/*

	Copyright 1995-2016, Advanced Computer Systems , Inc.
	Via Della Bufalotta, 378 - 00139 Roma - Italy
	http://www.acsys.it

	All Rights Reserved.

	This is UNPUBLISHED PROPRIETARY SOURCE CODE of Advanced Computer Systems;
	the contents of this file may not be disclosed to third parties, copied or
	duplicated in any form, in whole or in part, without the prior written
	permission of Advanced Computer Systems, Inc.

	$Prod: A.C.S. Db Cryosat Library $

	$Id$

	$Author$
    
    $Log$
    Revision 6.0  2016/07/07 13:44:05  damdec
    CSGACQ-82: special queries modified to be compatible with Oracle

    Revision 5.4  2016/04/18 15:22:52  marpas
    coding best practices application in progress

    Revision 5.3  2016/04/15 14:37:04  marpas
    coding best practices application in progress


*/

// This file is automatically generated by dbGenerator tool

#ifndef _dbWaitingOrderQuery_H_
#define _dbWaitingOrderQuery_H_

#include <dbGeneralQuery.h>
#include <exException.h>

_ACS_BEGIN_NAMESPACE(acs)

class dbCryosatFactory ;
class dbWaitingOrder ;

//
//
//
// class dbWaitingOrderQuery
//
//
//
class dbWaitingOrderQuery : // PRQA S 2109, 2153
	public dbGeneralQuery
{
	friend class dbCryosatFactory ; // PRQA S 2107
public:
	typedef dbWaitingOrder _queriedType ;
	
	dbWaitingOrderQuery(dbWaitingOrderQuery const &) ;
	dbWaitingOrderQuery &operator=(dbWaitingOrderQuery const &) ;
	
	virtual dbGeneralQueryIF *clone() const ; // PRQA S  2502
	
	static  std::string staticClassName() ;
	virtual ~dbWaitingOrderQuery() throw() ;

	virtual unsigned long doQuery(dbConnection &, bool incremental=false, bool enabled = true)  ; 

	virtual dbWaitingOrder *operator[](unsigned long i) ; 
	virtual const dbWaitingOrder *operator[](unsigned long i) const ; 

protected:
	explicit dbWaitingOrderQuery(const std::string &dbkey);
private:
	dbWaitingOrderQuery() ; // not implemented

private:

	ACS_CLASS_DECLARE_DEBUG_LEVEL(dbWaitingOrderQuery)
} ;

_ACS_END_NAMESPACE

#endif // _dbWaitingOrderQuery_H_

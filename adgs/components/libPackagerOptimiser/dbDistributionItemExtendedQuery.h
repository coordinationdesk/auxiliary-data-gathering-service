/*

	Copyright 1995-2016, Advanced Computer Systems , Inc.
	Via Della Bufalotta, 378 - 00139 Roma - Italy
	http://www.acsys.it

	All Rights Reserved.

	This is UNPUBLISHED PROPRIETARY SOURCE CODE of Advanced Computer Systems;
	the contents of this file may not be disclosed to third parties, copied or
	duplicated in any form, in whole or in part, without the prior written
	permission of Advanced Computer Systems, Inc.


	$Prod: A.C.S. Packager Optimiser Library $

	$Id$

	$Author$

	$Log$
	Revision 2.4  2016/03/26 21:36:45  marpas
	using new db I/F
	
	Revision 2.3  2014/06/25 16:24:12  marpas
	coding best practices applied
	
	Revision 2.2  2014/03/10 15:00:33  francesco.avanzi
	better code practices applied
	
	Revision 2.1  2012/02/16 18:18:21  marpas
	refactoring in progress
	
	Revision 2.0  2006/02/28 10:05:36  marpas
	Exception 2.1 I/F adopted
	
	Revision 1.2  2004/09/14 16:42:22  marpas
	query i/f changed now its direct base is dbGeneralQuery
	
	Revision 1.1  2004/09/14 16:28:37  marpas
	object extended to limit query number
	


*/

// This file is automatically generated by dbGenerator tool

#ifndef _dbDistributionItemExtendedQuery_H_
#define _dbDistributionItemExtendedQuery_H_

#include <dbGeneralQuery.h>
#include <exException.h>


_ACS_BEGIN_NAMESPACE(acs)


class dbDistributionItemExtended ;

//
//
//
// class dbDistributionItemExtendedQuery
//
//
//
class dbDistributionItemExtendedQuery :
	public dbGeneralQuery
{
public:
	friend class dbPackagerOptimiserFactory ; // PRQA S 2107
	typedef dbDistributionItemExtended _queriedType ;
	
	dbDistributionItemExtendedQuery(dbDistributionItemExtendedQuery const &) ;
	dbDistributionItemExtendedQuery &operator=(dbDistributionItemExtendedQuery const &) ;
	
	virtual dbGeneralQueryIF *clone() const ; // PRQA S 2502
	
	static  std::string staticClassName() ;
	virtual ~dbDistributionItemExtendedQuery() throw() ;

	virtual unsigned long doQuery(dbConnection &, bool incremental=false, bool enabled = true)  ; 

	virtual dbDistributionItemExtended *operator[](unsigned long i) ; 
	virtual const dbDistributionItemExtended *operator[](unsigned long i) const ; 

protected:
	dbDistributionItemExtendedQuery(const std::string &dbKey);

private:

	ACS_CLASS_DECLARE_DEBUG_LEVEL(dbDistributionItemExtendedQuery);
} ;

_ACS_END_NAMESPACE

#endif // _dbDistributionItemExtendedQuery_H_

#!/bin/sh
#
# Copyright 2005-2010, Advanced Computer Systems , Inc.
# Via Della Bufalotta, 378 - 00139 Roma - Italy
# http://www.acsys.itA.C.S. - Advanced Computer Systems S.p.A.
# 
# This is UNPUBLISHED PROPRIETARY SOURCE CODE of Advanced Computer Systems, S.p.A.;
# the contents of this file may not be disclosed to third parties, copied or
# duplicated in any form, in whole or in part, without the prior written
# permission of Advanced Computer Systems, S.p.A.
#	
#
#   $Prod: A.C.S. Postgres Tables Unload Procedure $
#
#	$Id$
#
#	$Author$
#
#	$Log$
#	Revision 1.14  2015/10/15 09:41:16  achnat
#	Added cryosat2 project
#	
#	Revision 1.13  2015/05/22 09:10:08  achnat
#	Added alsat project
#	
#	Revision 1.12  2015/02/16 09:21:48  achnat
#	Added geocal project
#	
#	Revision 1.11  2014/11/07 15:44:31  achnat
#	Fixed bug on deprecated option
#	
#	Revision 1.10  2012/10/08 13:47:42  achnat
#	Added ADC project.
#	
#	Revision 1.9  2011/10/10 10:04:03  achnat
#	Added clirsen project.
#	
#	Revision 1.8  2010/09/30 09:52:05  achnat
#	Added MDAPS project.
#	
#	Revision 1.7  2010/04/21 14:55:46  achnat
#	Added sectronic project
#	
#	Revision 1.6  2010/03/15 14:40:07  achnat
#	Added EMSA project.
#	
#	Revision 1.5  2009/07/30 09:37:14  achnat
#	Added venus_ism.
#	
#	Revision 1.4  2009/07/29 10:12:54  achnat
#	Added vcat databases.
#	
#	Revision 1.3  2009/06/30 13:53:02  achnat
#	Implemented new security constraints.
#	
#	Revision 1.2  2009/02/17 17:02:46  achnat
#	Removed blob dump.
#	
#	Revision 1.1.1.1  2009/02/13 18:15:33  achnat
#	psqlDbPopulation
#	








############################## FUNCTIONS #############################
######################################################################
set_conf() {
	if test -r "$CONF_FILE"
	then
		. $CONF_FILE

		export DBHOSTNAME
		export DBNAME
		export PDSUSER
		export PDSPASSWORD
		export DBAUSER
	else
		echo "*** Cannot find $CONF_FILE or it is not readable ***" | tee -a $LOG_FILE
		echo ""
		exit 1
	fi
	
	echo -n "Insert $DBAUSER password: "
	read -s answer
	export PGPASSWORD=$answer
	echo ""
}

check_conn() {
	echo -n "Checking connection on $DBNAME ..."
	checkConn $DBAUSER $DBNAME $DBHOSTNAME >> $LOG_FILE 2>&1
	if [ "$?" != 0 ]
	then 
		result_message 1
		errMessage "Unload"
	else
		result_message 0
	fi
}

catch_err() {
	if [ "$1" != 0 ]
	then 
		result_message 1
		errMessage "Load"
	else
		result_message 0
	fi
}

make_env() {
	if ! test -d $DATAPATH
	then
		mkdir $DATAPATH
	fi
	
	if test -d $DATAPATH/$dumpDir
	then
		rm -fr $DATAPATH/$dumpDir
	fi
	
	mkdir $DATAPATH/$dumpDir
}

dump_list() {
	echo -n "Extracting tables list ..." | tee -a $LOG_FILE
	echo "" >> $LOG_FILE
	dumpList $DBAUSER $DBNAME $DBHOSTNAME t $DUMP_FILE >> $LOG_FILE 2>&1
	catch_err $?
}

dump_data() {
	echo "Extracting tables data ..."
	for i in `cat $DUMP_FILE`
	do
		echo -n "   $i"
		pg_dump $DBNAME -h $DBHOSTNAME -U $DBAUSER -a --column-inserts -t $i -f $DATAPATH/$dumpDir/$i.sql >> $LOG_FILE 2>&1
		catch_err $?
	done
	chmod -R 770 $DATAPATH/$dumpDir
}

clean() {
	if test -e $DUMP_FILE
	then
		rm -f $DUMP_FILE
	fi
}





################################ MAIN ################################
######################################################################
echo ""
echo "PSQL UNLOAD PREOCEDURE"
echo "-------------------------------------------------------------------"

export EXE_DIR=`dirname $0`
cd $EXE_DIR
export EXE_DIR=`pwd`

cd ..
export BASE_DIR=`pwd`
cd $EXE_DIR

export CONF_DIR=$BASE_DIR/psqlUtilitiesConf
export COMM_LIBS=$BASE_DIR/psqlUtilitiesLibs
export DATAPATH=$BASE_DIR/DATA_DBLOAD

export DUMP_FILE=/tmp/psqlDumpListFile.txt
export LOG_FILE=/tmp/psqlUnloadDatabase.log

 # Source function library.
. $COMM_LIBS/libMessages
. $COMM_LIBS/libQueries
. /etc/rc.d/init.d/functions 


clean


case "$1" in
	'-a' | '--about')
		about "#   Description: Tables Unload Script                                                #"
		;;
	'adc')
		;;
	'alsat')
		;;
	'cryosat2')
		;;
	'cryosatipf')
		;;
	'clirsen')
		;;
	'emsa')
		;;
	'geocal') 
		;;
	'jersodc') 
		;;
	'mdaps')
		;;
	'prisma')
		;;
	'sectronic')
		;;
	'sigris')
		;;
	'vcat_brim' | 'vcat_users')
		echo "PROCEDURE NOT IMPLEMENTED FOR THIS PROJECT."
		echo ""
		exit 1
		;;
	'venus' | 'venus_ism')
		;;
	'test')
		;;
	*)
		usage "unload"
		;;
esac


export dumpDir=$1"Unload_`date -I`"
export CONF_FILE=$CONF_DIR/$1.conf
set_conf

initLog "UNLOAD" "$DBNAME"

make_env
check_conn
dump_list
dump_data
clean


echo "-------------------------------------------------------------------"
echo ">> Unload Procedure Completed" | tee -a $LOG_FILE
echo ""
exit 0


